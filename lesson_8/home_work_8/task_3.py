# 3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере. Запрашивать у пользователя данные и заполнять список необходимо только числами.
# Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит
# работу скрипта, введя, например, команду «stop». При этом скрипт завершается, сформированный список с числами выводится на экран.
# Подсказка: для этого задания примем, что пользователь может вводить только числа и строки. Во время ввода пользователем
# очередного элемента необходимо реализовать проверку типа элемента. Вносить его в список, только если введено число.
# Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
# При этом работа скрипта не должна завершаться

class MyValueExeption(Exception):
    def __init__(self, el):
        self.el = el

    def __str__(self):
        print(f'Ошибка: эелемент {self.el} не записан! Причина: {self.el} - не является числом')

number_list_digit = []
b = True
while b:
    print("Для выхода введите 'Stop'")
    number_list_str = list(input('Введите список чисел через пробел: ').split())
    print(f'Введеный список: {number_list_str}')
    for el in number_list_str:
        if el == 'stop':
            b = False
        else:
            if el.isalpha():
                try:
                    raise MyValueExeption(el)
                except MyValueExeption as err:
                    err.__str__()
            else:
                number_list_digit.append(el)
    print(f'Итоговый список: {number_list_digit}\n')
print('Выход')

